window.jest_html_reporters_callback__({"numFailedTestSuites":3,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":17,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":2,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":18,"startTime":1747184807065,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/socketService.test.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[96msrc/services/__tests__/socketService.test.ts\u001b[0m:\u001b[93m2\u001b[0m:\u001b[93m10\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2305: \u001b[0mModule '\"../socketService\"' has no exported member 'SocketService'.\n\n    \u001b[7m2\u001b[0m import { SocketService } from '../socketService'; // Import the class\n    \u001b[7m \u001b[0m \u001b[91m         ~~~~~~~~~~~~~\u001b[0m\n","testResults":[]},{"numFailingTests":1,"numPassingTests":17,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1747184811058,"runtime":3507,"slow":false,"start":1747184807551},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/authService.test.ts","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mAuthService › refreshAccessToken › should return a new access token if refresh token is valid\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n    \u001b[32m- Expected\u001b[39m\n    \u001b[31m+ Received\u001b[39m\n\n    \u001b[2m  Object {\u001b[22m\n    \u001b[31m+   \"deviceId\": \"testDevice\",\u001b[39m\n    \u001b[2m    \"userId\": 1,\u001b[22m\n    \u001b[2m    \"username\": \"testuser\",\u001b[22m\n    \u001b[2m  }\u001b[22m,\n      \u001b[2m\"timely_maher_edition_secret_key\"\u001b[22m,\n      \u001b[2m{\"expiresIn\": 86400}\u001b[22m,\n\n    Number of calls: \u001b[31m1\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 123 |\u001b[39m       \u001b[90m// Use the same logic as in the service to determine expected expiresIn\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 124 |\u001b[39m       \u001b[36mconst\u001b[39m expectedExpiresIn \u001b[33m=\u001b[39m parseInt(process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mJWT_EXPIRATION\u001b[39m \u001b[33m||\u001b[39m \u001b[32m'3600'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 125 |\u001b[39m       expect(jwt\u001b[33m.\u001b[39msign)\u001b[33m.\u001b[39mtoHaveBeenCalledWith({ userId\u001b[33m:\u001b[39m mockUser\u001b[33m.\u001b[39mid\u001b[33m,\u001b[39m username\u001b[33m:\u001b[39m mockUser\u001b[33m.\u001b[39musername }\u001b[33m,\u001b[39m process\u001b[33m.\u001b[39menv\u001b[33m.\u001b[39m\u001b[33mJWT_SECRET\u001b[39m \u001b[33m||\u001b[39m \u001b[32m'default_secret_key'\u001b[39m\u001b[33m,\u001b[39m { expiresIn\u001b[33m:\u001b[39m expectedExpiresIn })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 126 |\u001b[39m       expect(\u001b[33mRefreshTokenModel\u001b[39m\u001b[33m.\u001b[39mrevoke)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(mockStoredToken\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 127 |\u001b[39m       expect(\u001b[33mRefreshTokenModel\u001b[39m\u001b[33m.\u001b[39mcreate)\u001b[33m.\u001b[39mtoHaveBeenCalled()\u001b[33m;\u001b[39m \u001b[90m// New refresh token created\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 128 |\u001b[39m       expect(result\u001b[33m.\u001b[39msuccess)\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/services/__tests__/authService.test.ts\u001b[39m\u001b[0m\u001b[2m:125:24)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["AuthService","register"],"duration":7,"failureMessages":[],"fullName":"AuthService register should register a new user successfully","status":"passed","title":"should register a new user successfully"},{"ancestorTitles":["AuthService","register"],"duration":1,"failureMessages":[],"fullName":"AuthService register should return error if email is already registered","status":"passed","title":"should return error if email is already registered"},{"ancestorTitles":["AuthService","register"],"duration":0,"failureMessages":[],"fullName":"AuthService register should return error if username is already taken","status":"passed","title":"should return error if username is already taken"},{"ancestorTitles":["AuthService","login"],"duration":1,"failureMessages":[],"fullName":"AuthService login should login an existing user and return tokens","status":"passed","title":"should login an existing user and return tokens"},{"ancestorTitles":["AuthService","login"],"duration":4,"failureMessages":[],"fullName":"AuthService login should return error if user not found","status":"passed","title":"should return error if user not found"},{"ancestorTitles":["AuthService","login"],"duration":0,"failureMessages":[],"fullName":"AuthService login should return error for invalid password","status":"passed","title":"should return error for invalid password"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\n\u001b[32m- Expected\u001b[39m\n\u001b[31m+ Received\u001b[39m\n\n\u001b[2m  Object {\u001b[22m\n\u001b[31m+   \"deviceId\": \"testDevice\",\u001b[39m\n\u001b[2m    \"userId\": 1,\u001b[22m\n\u001b[2m    \"username\": \"testuser\",\u001b[22m\n\u001b[2m  }\u001b[22m,\n  \u001b[2m\"timely_maher_edition_secret_key\"\u001b[22m,\n  \u001b[2m{\"expiresIn\": 86400}\u001b[22m,\n\nNumber of calls: \u001b[31m1\u001b[39m\n    at Object.<anonymous> (/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/authService.test.ts:125:24)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"AuthService refreshAccessToken should return a new access token if refresh token is valid","status":"failed","title":"should return a new access token if refresh token is valid"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":1,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token format is invalid","status":"passed","title":"should return error if refresh token format is invalid"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":0,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token not found","status":"passed","title":"should return error if refresh token not found"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":4,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token is revoked","status":"passed","title":"should return error if refresh token is revoked"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":0,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token is expired","status":"passed","title":"should return error if refresh token is expired"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":0,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if verifier is invalid","status":"passed","title":"should return error if verifier is invalid"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":1,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if user not found for refresh token","status":"passed","title":"should return error if user not found for refresh token"},{"ancestorTitles":["AuthService","revokeRefreshToken"],"duration":0,"failureMessages":[],"fullName":"AuthService revokeRefreshToken should revoke the refresh token","status":"passed","title":"should revoke the refresh token"},{"ancestorTitles":["AuthService","revokeRefreshToken"],"duration":0,"failureMessages":[],"fullName":"AuthService revokeRefreshToken should return error if token format is invalid","status":"passed","title":"should return error if token format is invalid"},{"ancestorTitles":["AuthService","revokeRefreshToken"],"duration":1,"failureMessages":[],"fullName":"AuthService revokeRefreshToken should return error if token not found","status":"passed","title":"should return error if token not found"},{"ancestorTitles":["AuthService","verifyToken"],"duration":0,"failureMessages":[],"fullName":"AuthService verifyToken should return valid and decoded user info for a valid token","status":"passed","title":"should return valid and decoded user info for a valid token"},{"ancestorTitles":["AuthService","verifyToken"],"duration":0,"failureMessages":[],"fullName":"AuthService verifyToken should return invalid for an invalid token","status":"passed","title":"should return invalid for an invalid token"}]},{"numFailingTests":0,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":0,"runtime":0,"slow":false,"start":0},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/alarmService.spec.ts","failureMessage":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    Jest worker encountered 4 child process exceptions, exceeding retry limit\n\n      \u001b[2mat ChildProcessWorker.initialize (\u001b[22mnode_modules/jest-worker/build/workers/ChildProcessWorker.js\u001b[2m:181:21)\u001b[22m\n","testResults":[]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/coverage","coverageProvider":"babel","coverageReporters":["json","lcov","text","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/node_modules/jest-html-reporters/index.js",{"publicPath":"./html-report","filename":"report.html","expand":true}]],"rootDir":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd","runTestsByPath":false,"seed":-619267005,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"../coverage/lcov-report/index.html"},"endTime":1747184817164,"_reporterOptions":{"publicPath":"./html-report","filename":"report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})