window.jest_html_reporters_callback__({"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":5,"numPassedTests":46,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":5,"numTotalTests":46,"startTime":1746759070644,"success":false,"testResults":[{"numFailingTests":0,"numPassingTests":6,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746759072681,"runtime":1423,"slow":false,"start":1746759071258},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/socketService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["SocketService"],"duration":18,"failureMessages":[],"fullName":"SocketService should initialize Socket.io server on instantiation","status":"passed","title":"should initialize Socket.io server on instantiation"},{"ancestorTitles":["SocketService","handleConnection"],"duration":3,"failureMessages":[],"fullName":"SocketService handleConnection should handle new client connection, join room and set up disconnect","status":"passed","title":"should handle new client connection, join room and set up disconnect"},{"ancestorTitles":["SocketService","emitToUser"],"duration":2,"failureMessages":[],"fullName":"SocketService emitToUser should emit an event to the specified user room","status":"passed","title":"should emit an event to the specified user room"},{"ancestorTitles":["SocketService","emitToUser"],"duration":1,"failureMessages":[],"fullName":"SocketService emitToUser should emit an event to the user room, excluding senderSocketId if provided","status":"passed","title":"should emit an event to the user room, excluding senderSocketId if provided"},{"ancestorTitles":["SocketService","client event handling"],"duration":1,"failureMessages":[],"fullName":"SocketService client event handling should handle joinAlarmRoom event from client","status":"passed","title":"should handle joinAlarmRoom event from client"},{"ancestorTitles":["SocketService","client event handling"],"duration":1,"failureMessages":[],"fullName":"SocketService client event handling should handle leaveAlarmRoom event from client","status":"passed","title":"should handle leaveAlarmRoom event from client"}]},{"numFailingTests":0,"numPassingTests":18,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746759072737,"runtime":1487,"slow":false,"start":1746759071250},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/authService.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AuthService","register"],"duration":6,"failureMessages":[],"fullName":"AuthService register should register a new user successfully","status":"passed","title":"should register a new user successfully"},{"ancestorTitles":["AuthService","register"],"duration":1,"failureMessages":[],"fullName":"AuthService register should return error if email is already registered","status":"passed","title":"should return error if email is already registered"},{"ancestorTitles":["AuthService","register"],"duration":0,"failureMessages":[],"fullName":"AuthService register should return error if username is already taken","status":"passed","title":"should return error if username is already taken"},{"ancestorTitles":["AuthService","login"],"duration":1,"failureMessages":[],"fullName":"AuthService login should login an existing user and return tokens","status":"passed","title":"should login an existing user and return tokens"},{"ancestorTitles":["AuthService","login"],"duration":1,"failureMessages":[],"fullName":"AuthService login should return error if user not found","status":"passed","title":"should return error if user not found"},{"ancestorTitles":["AuthService","login"],"duration":0,"failureMessages":[],"fullName":"AuthService login should return error for invalid password","status":"passed","title":"should return error for invalid password"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":2,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return a new access token if refresh token is valid","status":"passed","title":"should return a new access token if refresh token is valid"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":1,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token format is invalid","status":"passed","title":"should return error if refresh token format is invalid"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":0,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token not found","status":"passed","title":"should return error if refresh token not found"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":8,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token is revoked","status":"passed","title":"should return error if refresh token is revoked"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":0,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if refresh token is expired","status":"passed","title":"should return error if refresh token is expired"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":1,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if verifier is invalid","status":"passed","title":"should return error if verifier is invalid"},{"ancestorTitles":["AuthService","refreshAccessToken"],"duration":0,"failureMessages":[],"fullName":"AuthService refreshAccessToken should return error if user not found for refresh token","status":"passed","title":"should return error if user not found for refresh token"},{"ancestorTitles":["AuthService","revokeRefreshToken"],"duration":1,"failureMessages":[],"fullName":"AuthService revokeRefreshToken should revoke the refresh token","status":"passed","title":"should revoke the refresh token"},{"ancestorTitles":["AuthService","revokeRefreshToken"],"duration":0,"failureMessages":[],"fullName":"AuthService revokeRefreshToken should return error if token format is invalid","status":"passed","title":"should return error if token format is invalid"},{"ancestorTitles":["AuthService","revokeRefreshToken"],"duration":0,"failureMessages":[],"fullName":"AuthService revokeRefreshToken should return error if token not found","status":"passed","title":"should return error if token not found"},{"ancestorTitles":["AuthService","verifyToken"],"duration":0,"failureMessages":[],"fullName":"AuthService verifyToken should return valid and decoded user info for a valid token","status":"passed","title":"should return valid and decoded user info for a valid token"},{"ancestorTitles":["AuthService","verifyToken"],"duration":1,"failureMessages":[],"fullName":"AuthService verifyToken should return invalid for an invalid token","status":"passed","title":"should return invalid for an invalid token"}]},{"numFailingTests":0,"numPassingTests":4,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746759072765,"runtime":1514,"slow":false,"start":1746759071251},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/services/__tests__/alarmService.spec.ts","failureMessage":null,"testResults":[{"ancestorTitles":["AlarmService","createAlarm"],"duration":16,"failureMessages":[],"fullName":"AlarmService createAlarm should create an alarm successfully and emit a socket event","status":"passed","title":"should create an alarm successfully and emit a socket event"},{"ancestorTitles":["AlarmService","createAlarm"],"duration":2,"failureMessages":[],"fullName":"AlarmService createAlarm should return success false if alarm creation in model fails","status":"passed","title":"should return success false if alarm creation in model fails"},{"ancestorTitles":["AlarmService","createAlarm"],"duration":1,"failureMessages":[],"fullName":"AlarmService createAlarm should return success false if findById after creation fails","status":"passed","title":"should return success false if findById after creation fails"},{"ancestorTitles":["AlarmService","createAlarm"],"duration":1,"failureMessages":[],"fullName":"AlarmService createAlarm should handle errors during alarm creation in service","status":"passed","title":"should handle errors during alarm creation in service"}]},{"numFailingTests":0,"numPassingTests":8,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746759073351,"runtime":2100,"slow":false,"start":1746759071251},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/__tests__/integration/auth.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Auth API Endpoints","POST /api/auth/register"],"duration":22,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/register should register a new user successfully and return tokens","status":"passed","title":"should register a new user successfully and return tokens"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/register"],"duration":3,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/register should return 400 if username is already taken","status":"passed","title":"should return 400 if username is already taken"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/register"],"duration":2,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/register should return 400 if email is already registered","status":"passed","title":"should return 400 if email is already registered"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/register"],"duration":2,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/register should return 400 for invalid registration payload (e.g., missing fields)","status":"passed","title":"should return 400 for invalid registration payload (e.g., missing fields)"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/login"],"duration":3,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/login should login an existing user successfully and return tokens","status":"passed","title":"should login an existing user successfully and return tokens"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/login"],"duration":1,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/login should return 401 if user not found","status":"passed","title":"should return 401 if user not found"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/login"],"duration":1,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/login should return 401 for invalid password","status":"passed","title":"should return 401 for invalid password"},{"ancestorTitles":["Auth API Endpoints","POST /api/auth/login"],"duration":2,"failureMessages":[],"fullName":"Auth API Endpoints POST /api/auth/login should return 400 for invalid login payload (e.g., missing fields)","status":"passed","title":"should return 400 for invalid login payload (e.g., missing fields)"}]},{"numFailingTests":0,"numPassingTests":10,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1746759073519,"runtime":2267,"slow":false,"start":1746759071252},"testFilePath":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/src/__tests__/integration/alarm.integration.test.ts","failureMessage":null,"testResults":[{"ancestorTitles":["Alarm API Endpoints","POST /api/alarms"],"duration":21,"failureMessages":[],"fullName":"Alarm API Endpoints POST /api/alarms should create a new alarm successfully","status":"passed","title":"should create a new alarm successfully"},{"ancestorTitles":["Alarm API Endpoints","POST /api/alarms"],"duration":3,"failureMessages":[],"fullName":"Alarm API Endpoints POST /api/alarms should return 400 for invalid alarm payload","status":"passed","title":"should return 400 for invalid alarm payload"},{"ancestorTitles":["Alarm API Endpoints","GET /api/alarms"],"duration":2,"failureMessages":[],"fullName":"Alarm API Endpoints GET /api/alarms should retrieve all alarms for the authenticated user","status":"passed","title":"should retrieve all alarms for the authenticated user"},{"ancestorTitles":["Alarm API Endpoints","GET /api/alarms/:id"],"duration":3,"failureMessages":[],"fullName":"Alarm API Endpoints GET /api/alarms/:id should retrieve a specific alarm by ID for the authenticated user","status":"passed","title":"should retrieve a specific alarm by ID for the authenticated user"},{"ancestorTitles":["Alarm API Endpoints","GET /api/alarms/:id"],"duration":2,"failureMessages":[],"fullName":"Alarm API Endpoints GET /api/alarms/:id should return 404 if alarm not found or does not belong to user","status":"passed","title":"should return 404 if alarm not found or does not belong to user"},{"ancestorTitles":["Alarm API Endpoints","PUT /api/alarms/:id"],"duration":2,"failureMessages":[],"fullName":"Alarm API Endpoints PUT /api/alarms/:id should update an existing alarm successfully","status":"passed","title":"should update an existing alarm successfully"},{"ancestorTitles":["Alarm API Endpoints","PUT /api/alarms/:id"],"duration":2,"failureMessages":[],"fullName":"Alarm API Endpoints PUT /api/alarms/:id should return 404 if alarm to update is not found","status":"passed","title":"should return 404 if alarm to update is not found"},{"ancestorTitles":["Alarm API Endpoints","PUT /api/alarms/:id"],"duration":2,"failureMessages":[],"fullName":"Alarm API Endpoints PUT /api/alarms/:id should return 400 for invalid update payload","status":"passed","title":"should return 400 for invalid update payload"},{"ancestorTitles":["Alarm API Endpoints","DELETE /api/alarms/:id"],"duration":2,"failureMessages":[],"fullName":"Alarm API Endpoints DELETE /api/alarms/:id should delete an alarm successfully","status":"passed","title":"should delete an alarm successfully"},{"ancestorTitles":["Alarm API Endpoints","DELETE /api/alarms/:id"],"duration":1,"failureMessages":[],"fullName":"Alarm API Endpoints DELETE /api/alarms/:id should return 404 if alarm to delete is not found","status":"passed","title":"should return 404 if alarm to delete is not found"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":true,"collectCoverageFrom":[],"coverageDirectory":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/coverage","coverageProvider":"babel","coverageReporters":["json","lcov","text","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":15,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/node_modules/jest-html-reporters/index.js",{"publicPath":"./html-report","filename":"report.html","expand":true}]],"rootDir":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd","runTestsByPath":false,"seed":-1262609332,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/media/mahermaker/Data512/Codes/TimelyMaherEdition/BackEnd/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false,"coverageLinkPath":"../coverage/lcov-report/index.html"},"endTime":1746759073599,"_reporterOptions":{"publicPath":"./html-report","filename":"report.html","expand":true,"pageTitle":"","hideIcon":false,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false},"logInfoMapping":{},"attachInfos":{}})